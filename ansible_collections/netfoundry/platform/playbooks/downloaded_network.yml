# this is an example of a network download from the web console's list of networks
networkGroupId: ACMEGROUP
size: small
name: ACME Network 123
productVersion: default
o365BreakoutCategory: NONE
locationCode: us-east-1
edgeRouters:
  - name: Branch Exit Router 1
    linkListener: false
    tunnelerEnabled: true
    attributes:
      - '#vmWareExitRouters'
  - name: Ohio [Americas]
    provider: AWS
    datacenter: us-east-2
    linkListener: true
    tunnelerEnabled: false
    attributes:
      - '#Americas'
      - '#defaultRouters'
      - '#us-east-2'
edgeRouterPolicies:
  - name: defaultRouters
    endpointAttributes:
      - '#all'
    edgeRouterAttributes:
      - '#defaultRouters'
services:
  - name: Fireworks Service
    encryptionRequired: true
    attributes:
      - '#welcomeWagon'
    modelType: TunnelerToEdgeRouter
    model:
      clientIngress:
        host: fireworks.netfoundry
        port: 80
      edgeRouterAttributes:
        - '#all'
      edgeRouterHosts:
        - edgeRouterName: Ohio [Americas]
          serverEgress:
            protocol: tcp
            host: fireworks-load-balancer-1246256380.us-east-1.elb.amazonaws.com
            port: 80
  - name: REST Service
    encryptionRequired: true
    attributes:
      - '#welcomeWagon'
    modelType: TunnelerToEndpoint
    model:
      clientIngress:
        host: httpbin.netfoundry
        port: 80
      serverEgress:
        protocol: tcp
        host: httpbin
        port: 80
      bindEndpointAttributes:
        - '@Exit1'
      edgeRouterAttributes:
        - '#all'
  - name: Echo Service
    encryptionRequired: true
    attributes:
      - '#welcomeWagon'
    modelType: TunnelerToEdgeRouter
    model:
      clientIngress:
        host: echo.netfoundry
        port: 80
      edgeRouterAttributes:
        - '#all'
      edgeRouterHosts:
        - edgeRouterName: Ohio [Americas]
          serverEgress:
            protocol: tcp
            host: eth0.me
            port: 80
  - name: Weather Service
    encryptionRequired: true
    attributes:
      - '#welcomeWagon'
    modelType: TunnelerToEdgeRouter
    model:
      clientIngress:
        host: weather.netfoundry
        port: 80
      edgeRouterAttributes:
        - '#all'
      edgeRouterHosts:
        - edgeRouterName: Ohio [Americas]
          serverEgress:
            protocol: tcp
            host: wttr.in
            port: 80
  - name: Hello Service
    encryptionRequired: true
    attributes:
      - '#welcomeWagon'
    modelType: TunnelerToEndpoint
    model:
      clientIngress:
        host: hello.netfoundry
        port: 80
      serverEgress:
        protocol: tcp
        host: hello
        port: 3000
      bindEndpointAttributes:
        - '@Exit1'
      edgeRouterAttributes:
        - '#all'
certificateAuthorities: []
endpoints:
  - name: Mobile1
    enrollmentMethod:
      ott: true
      updb: null
      ottca: null
    attributes:
      - '#workFromAnywhere'
  - name: Exit1
    enrollmentMethod:
      ott: true
      updb: null
      ottca: null
    attributes:
      - '#exits'
  - name: Desktop1
    enrollmentMethod:
      ott: true
      updb: null
      ottca: null
    attributes:
      - '#workFromAnywhere'
  - name: Branch Exit Router 1
    enrollmentMethod:
      ott: true
      updb: null
      ottca: null
    attributes: []
  - name: Linux1
    enrollmentMethod:
      ott: true
      updb: null
      ottca: null
    attributes:
      - '#workFromAnywhere'
appWans:
  - networkId: null
    name: Welcome
    type: Dial
    semantic: AnyOf
    serviceAttributes:
      - '#welcomeWagon'
    endpointAttributes:
      - '#workFromAnywhere'
    postureCheckAttributes: []
postureChecks: []
